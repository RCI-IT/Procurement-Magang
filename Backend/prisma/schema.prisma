datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Order {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  number      String          @unique
  contractNumber String
  detail      OrderDetails[]
  location    String
  requestBy   String
  isConfirmed Boolean         @default(false)
  isReceived  Boolean         @default(false)
  purchase    DetailPurchases[]
}

model OrderDetails {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  orderId     Int
  order       Order           @relation(fields: [orderId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  materialId  Int
  material    Materials       @relation(fields: [materialId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  qty         Int
  mention     String
}

model Materials {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  image       String
  name        String
  price       Int
  categoryId  Int
  category    Categories      @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  vendorId    Int
  vendor      Vendors         @relation(fields: [vendorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  order       OrderDetails[]
  purchase    DetailPurchases[]
}

model Categories {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  name        String          @unique
  material    Materials[]
}

model Vendors {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  name        String
  address     String?
  city        String?
  phone       String?
  material    Materials[]
}

model Purchases {
  id              Int             @id @default(autoincrement())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  number          String          @unique
  refrence        String
  detail          DetailPurchases[]
  subtotal        Int
  tax             Int
  totalPayment    Int
  payment         String
  createBy        String
  checkByFinance  Boolean         @default(false)
  isAccepted      Boolean         @default(false)
}

model DetailPurchases {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  purchaseId  Int
  purchase    Purchases       @relation(fields: [purchaseId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  materialId  Int
  material    Materials       @relation(fields: [materialId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  orderId     Int
  order       Order           @relation(fields: [orderId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  codeBudget  String
  mention     String
  qty         Int
  price       Int
  totalPrice  Int
}
